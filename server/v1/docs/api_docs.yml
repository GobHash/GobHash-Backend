---
swagger: "2.0"
info:
  description: "This is a detailed GobHash API Documentation.  You can find out more about on initial docs at [http://api.gobhash.com/docs](http://api.gobhash.com/docs) \n You can logout [here](/logout)"
  version: "1.0.0"
  title: "GobHash API"
basePath: "/v1"
schemes:
- "https"
- "http"
consumes:
  - application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /auth/login:
    post:
      tags:
      - "Auth"
      summary: "Login user"
      description: "Login endpoint"
      operationId: "postLogin"
      parameters:
      - name: "loginBody"
        in: "body"
        description: "Login object"
        required: true
        schema:
          $ref: "#/definitions/Login"

      responses:
        200:
          description: "Authorization Token"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /auth/reset:
    post:
      tags:
      - "Auth"
      summary: "Request to reset password"
      description: "Initial flow to reset a users's password. Sends email to user."
      operationId: "authResetPOST"
      parameters:
      - name: "AuthBody"
        in: "body"
        description: "Auth Reset body"
        required: true
        schema:
          $ref: "#/definitions/Auth"

      responses:
        200:
          description: "Reset token"
          schema:
            type: "object"
            $ref: "#/definitions/ResetPassword"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /auth/reset/{token}:
    get:
      security:
        - Bearer: []
      tags:
      - "Auth"
      summary: "Validate token in URL"
      description: "Search for valid valid reset token. Returns user object"
      operationId: "validateResetPOST"
      parameters:
      - name: "token"
        in: "path"
        description: "Reset password token"
        required: true
        type: "string"
      responses:
        200:
          description: "Reset token"
          schema:
            type: "object"
            $ref: "#/definitions/User"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /users:
    get:
      security:
        - Bearer: []
      tags:
      - "User"
      summary: "Get all users"
      description: "List all registered users."
      operationId: "listUsersGET"
      parameters:
      - name: "skip"
        in: "query"
        description: "Skip users (offset)"
        required: false
        type: "number"
      - name: "limit"
        in: "query"
        description: "Limit user list"
        required: false
        type: "number"
      responses:
        200:
          description: "User"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
      - "User"
      summary: "Create new user"
      description: "Create a new user."
      operationId: "createUserPOST"
      parameters:
      - name: "bodyUser"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/UserPost"
      responses:
        200:
          description: "User"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /users/{id}:
    get:
      security:
        - Bearer: []
      tags:
      - "User"
      summary: "Get User by id"
      description: "Get user by id"
      operationId: "userGET"
      parameters:
      - name: "id"
        in: "path"
        description: "User id"
        required: true
        type: "string"
      responses:
        200:
          description: "User"
          schema:
            type: "object"
            $ref: "#/definitions/User"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
    put:
      security:
        - Bearer: []
      tags:
      - "User"
      summary: "Update a user"
      description: "Update a user's password and email"
      operationId: "updateUserPUT"
      parameters:
      - name: "bodyUser"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/UserPut"
      responses:
        200:
          description: "User"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      security:
        - Bearer: []
      tags:
      - "User"
      summary: "Delete a user"
      description: "Delete a user by id"
      operationId: "deleteUser"
      parameters:
      - name: "id"
        in: "path"
        required: true
        description: "User's id"
        type: number
      responses:
        200:
          description: "User"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /users/password/change:
    post:
      tags:
      - "User"
      summary: Change a user's password
      description: Change user's password and remove reset token
      operationId: changePasswordPost
      parameters:
      - name: "bodyPassword"
        in: "body"
        description: "body Password"
        required: true
        schema:
          $ref: "#/definitions/passwordChange"
      responses:
        200:
          description: "Password changed message"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /users/password/update:
    post:
      tags:
      - "User"
      summary: Update a user's password
      description: Update user's password
      operationId: updatePasswordPOST
      parameters:
      - name: "bodyPassword"
        in: "body"
        description: "body Password"
        required: true
        schema:
          $ref: "#/definitions/passwordUpdate"
      responses:
        200:
          description: "Password changed message"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /users/biography:
    post:
      security:
        - Bearer: []
      tags:
      - "User"
      summary: "Update or set the user's biography"
      description: "This will create or update the user's biography."
      operationId: "userBioPOST"
      parameters:
      - name: "UserBody"
        in: "body"
        description: "User biography body"
        required: true
        schema:
          $ref: "#/definitions/UserBio"

      responses:
        200:
          description: "biography updated"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /users/picture:
    post:
      security:
        - Bearer: []
      tags:
      - "User"
      summary: Uploads a file.
      consumes:
       - multipart/form-data
      parameters:
       - in: formData
         name: profile
         type: file
         description: The photo to upload.
      responses:
        200:
          description: "biography updated"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /users/follow:
    post:
      security:
        - Bearer: []
      tags:
      - "User"
      summary: Follow a user.
      parameters:
      - name: "FollowBody"
        in: "body"
        description: "Follow another user"
        required: true
        schema:
          $ref: "#/definitions/UserFollow"
      responses:
        200:
          description: "user followed user"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /users/unfollow:
    post:
      security:
        - Bearer: []
      tags:
      - "User"
      summary: Unfollows a user.
      parameters:
      - name: "FollowBody"
        in: "body"
        description: "Unfollows another user"
        required: true
        schema:
          $ref: "#/definitions/UserFollow"
      responses:
        200:
          description: "user unfollowed user"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /users/profile:
    post:
      security:
        - Bearer: []
      tags:
      - "User"
      summary: Set the profile of a user.
      parameters:
      - name: "profilePOST"
        in: "body"
        description: "Profile fields"
        required: true
        schema:
          $ref: "#/definitions/UserProfilePOST"
      responses:
        200:
          description: "Profile created"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
    get:
      security:
        - Bearer: []
      tags:
      - "User"
      summary: Get the profile of a user
      responses:
        200:
          description: "Profile"
          schema:
            $ref: "#/definitions/UserProfile"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /post/:
    post:
      security:
        - Bearer: []
      tags:
      - "Post"
      summary: Create a new post
      description: Create a new post
      operationId: createNewPost
      parameters:
      - name: "PostBody"
        in: "body"
        description: "body of post"
        required: true
        schema:
          $ref: "#/definitions/PostBody"
      responses:
        200:
          description: "Post created"
          schema:
            type: "object"
            $ref: "#/definitions/PostBody"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
    get:
      security:
        - Bearer: []
      tags:
      - "Post"
      summary: Get list of posts
      description: Get list of posts
      operationId: GetPOST
      parameters:
      - name: "skip"
        in: "query"
        description: "Skip posts (offset)"
        required: false
        type: "number"
      - name: "limit"
        in: "query"
        description: "Limit post list"
        required: false
        type: "number"
      responses:
        200:
          description: "Post created"
          schema:
            $ref: "#/definitions/PostEntity"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      security:
        - Bearer: []
      tags:
      - "Post"
      summary: Deletes a post
      description: Deletes a post by id
      operationId: deletePostPOST
      parameters:
      - name: "PostDeleteBody"
        in: "body"
        description: "body of post"
        required: true
        schema:
          $ref: "#/definitions/PostDeleteBody"
      responses:
        200:
          description: "Post deleted"
          schema:
            type: "object"
            $ref: "#/definitions/PostBody"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /post/{postId}:
     get:
      security:
        - Bearer: []
      tags:
      - "Post"
      summary: Get one post
      description: Get post by id
      operationId: GetPOSTPOST
      parameters:
      - name: "postId"
        in: "path"
        description: "Post id"
        required: true
        type: "string"
      responses:
        200:
          description: "Post created"
          schema:
            type: "object"
            $ref: "#/definitions/PostEntity"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /post/feed/{userId}:
    get:
      security:
        - Bearer: []
      tags:
      - "Post"
      summary: Get list of posts according to following users
      description: Get list of posts according to following users
      operationId: GetFeedPOST
      parameters:
      - name: "userId"
        in: "path"
        description: "User id"
        required: true
        type: "string"
      responses:
        200:
          description: "Posts"
          schema:
            type: "object"
            $ref: "#/definitions/PostEntity"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /post/comment:
    post:
      security:
        - Bearer: []
      tags:
      - "Post"
      summary: Add comment to post
      description: Add a new comment to post
      operationId: commentPOST
      parameters:
      - name: "commentPOST"
        in: "body"
        description: "body of comment post"
        required: true
        schema:
          $ref: "#/definitions/PostCommentBody"
      responses:
        200:
          description: "Comment created"
          schema:
            type: "object"
            $ref: "#/definitions/PostEntity"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      security:
        - Bearer: []
      tags:
      - "Post"
      summary: Delete comment from post
      description: Add a new comment to post
      operationId: commentDELETE
      parameters:
      - name: "commentDELETE"
        in: "body"
        description: "body of comment post"
        required: true
        schema:
          $ref: "#/definitions/PostCommentDeleteBody"
      responses:
        200:
          description: "Post created"
          schema:
            type: "object"
            $ref: "#/definitions/PostEntity"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /post/tag:
    post:
      security:
        - Bearer: []
      tags:
      - "Post"
      summary: Add tag to post
      description: Add a new tag to post
      operationId: tagPOST
      parameters:
      - name: "tagPOST"
        in: "body"
        description: "body of tag post"
        required: true
        schema:
          $ref: "#/definitions/PostTagBody"
      responses:
        200:
          description: "Tag added"
          schema:
            type: "object"
            $ref: "#/definitions/PostEntity"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      security:
        - Bearer: []
      tags:
      - "Post"
      summary: Delete tag from post
      description: Delete a new tag to post
      operationId: tagDelete
      parameters:
      - name: "tagDelete"
        in: "body"
        description: "body of comment post"
        required: true
        schema:
          $ref: "#/definitions/PostTagBody"
      responses:
        200:
          description: "Tag created"
          schema:
            type: "object"
            $ref: "#/definitions/PostEntity"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /post/like:
    post:
      security:
        - Bearer: []
      tags:
      - "Post"
      summary: Add like to post
      description: Add a new like to post
      operationId: likePOST
      parameters:
      - name: "likePOST"
        in: "body"
        description: "body of like post"
        required: true
        schema:
          $ref: "#/definitions/LikePostBody"
      responses:
        200:
          description: "Like count"
          schema:
            type: "integer"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      security:
        - Bearer: []
      tags:
      - "Post"
      summary: Remove like from post
      description: delete like from post
      operationId: likeDELETE
      parameters:
      - name: "likeDELETE"
        in: "body"
        description: "body of like post"
        required: true
        schema:
          $ref: "#/definitions/LikePostBody"
      responses:
        200:
          description: "Like count"
          schema:
            type: "integer"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /post/like/validation/{postId}/{userId}:
    get:
      security:
        - Bearer: []
      tags:
      - "Post"
      summary: Verify if user can like post
      description: Verify if user can like post
      operationId: likeValidationPOST
      parameters:
      - name: "postId"
        in: "path"
        description: "Id of Post"
        required: true
      - name: "userId"
        in: "path"
        description: "Id of user"
        required: true
      responses:
        200:
          description: "Can like Post"
          schema:
            type: "boolean"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /search/users:
    get:
      security:
        - Bearer: []
      tags:
      - "Search"
      summary: "Find users"
      description: "Find users by username or name."
      operationId: "findUsersGET"
      parameters:
      - name: "username"
        in: "query"
        description: "username of user"
        required: false
        type: "string"
      - name: "name"
        in: "query"
        description: "name of user"
        required: false
        type: "string"
      responses:
        200:
          description: "User"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /stats/user/{userId}:
    get:
      security:
        - Bearer: []
      tags:
      - "Stats"
      summary: "Stats for user"
      description: "Number of followers, following and number of posts of user"
      operationId: "statsUserGET"
      parameters:
      - name: "userId"
        in: "path"
        description: "user id"
        required: true
        type: "string"
      responses:
        200:
          description: "UserStats"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/UserStats"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
  /stats/posts/top:
    get:
      security:
        - Bearer: []
      tags:
      - "Stats"
      summary: "Stats for top posts"
      description: "Get the most liked posts"
      operationId: "statsPostGET"
      parameters:
      - name: "limit"
        in: "query"
        description: "limit the number of posts"
        required: false
        type: "integer"
      - name: "skip"
        in: "query"
        description: "skip a number of posts"
        type: "integer"
        required: false
      responses:
        200:
          description: "UserStats"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PostEntity"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
definitions:
  Login:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
  Auth:
    type: "object"
    properties:
      username:
        type: "string"
      email:
        type: "string"

  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      username:
        type: "string"
  UserPost:
    type: "object"
    properties:
      username:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
  UserPut:
    type: "object"
    properties:
      username:
        type: "string"
      email:
        type: "string"
  ResetPassword:
    type: "object"
    properties:
      message:
        type: "string"
      token:
        type: "string"
  UserBio:
    type: "object"
    properties:
      username:
        type: string
      biography:
        type: string
  UserProfilePOST:
      type: object
      properties:
        biography:
          type: string
        occupation:
          type: string
  UserProfile:
    type: object
    properties:
      username:
        type: string
      biography:
        type: string
      occupation:
        type: string
  UserFollow:
    type: "object"
    properties:
      username:
        type: "string"
  passwordChange:
    type: "object"
    properties:
      token:
        type: "string"
      password:
        type: "string"
  PostDeleteBody:
    type: object
    properties:
      postId:
        type: string
  PostBody:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      dashboard:
        type: object
        properties:
          main:
            type: object
            required: true
            properties:
              data:
                type: array
                items:
                  type: array
              definition:
                type: object
                properties:
                  name:
                    type: string
                  widgetType:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                  entity:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      visible:
                        type: boolean
                      updatedAt:
                        type: string
                      createdAt:
                        type: string
                  filter:
                    type: array
                    items:
                      type: object
                      properties:
                        hashKey:
                          type: string
                        column:
                          type: object
                          properties:
                            base_table:
                              type: string
                            entity_id:
                              type: integer
                            name:
                              type: string
                            updatedAt:
                              type: string
                            createdAt:
                              type: string
                          operation:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                              value_type:
                                type: integer
                              updatedAt:
                                type: string
                              createdAt:
                                type: string
                          value:
                            type: string
                  dateFilters:
                    type: array
                    items:
                      type: object
                      properties:
                        hashKey:
                          type: string
                        column:
                          type: object
                          properties:
                            base_table:
                              type: string
                            entity_id:
                              type: integer
                            name:
                              type: string
                            updatedAt:
                              type: string
                            createdAt:
                              type: string
                          operation:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                              value_type:
                                type: integer
                              updatedAt:
                                type: string
                              createdAt:
                                type: string
                          value:
                            type: string
                    baseColumn:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        base_type:
                          type: string
                        base_table:
                          type: string
                        second_table:
                          type: string
                        entity_id:
                          type: integer
                        createdAt:
                          type: string
                        updatedAt:
                          type: string
                    category:
                      type: object
                      properties:
                        operation:
                          type: string
                        column:
                  type: string
          first_submain:
            type: object
            required: false
            properties:
              data:
                type: array
                items:
                  type: array
              definition:
                type: object
                properties:
                  name:
                    type: string
                  widgetType:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                  entity:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      visible:
                        type: boolean
                      updatedAt:
                        type: string
                      createdAt:
                        type: string
                  filter:
                    type: array
                    items:
                      type: object
                      properties:
                        hashKey:
                          type: string
                        column:
                          type: object
                          properties:
                            base_table:
                              type: string
                            entity_id:
                              type: integer
                            name:
                              type: string
                            updatedAt:
                              type: string
                            createdAt:
                              type: string
                          operation:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                              value_type:
                                type: integer
                              updatedAt:
                                type: string
                              createdAt:
                                type: string
                          value:
                            type: string
                  dateFilters:
                    type: array
                    items:
                      type: object
                      properties:
                        hashKey:
                          type: string
                        column:
                          type: object
                          properties:
                            base_table:
                              type: string
                            entity_id:
                              type: integer
                            name:
                              type: string
                            updatedAt:
                              type: string
                            createdAt:
                              type: string
                          operation:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                              value_type:
                                type: integer
                              updatedAt:
                                type: string
                              createdAt:
                                type: string
                          value:
                            type: string
                    baseColumn:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        base_type:
                          type: string
                        base_table:
                          type: string
                        second_table:
                          type: string
                        entity_id:
                          type: integer
                        createdAt:
                          type: string
                        updatedAt:
                          type: string
                    category:
                      type: object
                      properties:
                        operation:
                          type: string
                        column:
                  type: string
          second_submain:
            type: object
            required: false
            properties:
              data:
                type: array
                items:
                  type: array
              definition:
                type: object
                properties:
                  name:
                    type: string
                  widgetType:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                  entity:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      visible:
                        type: boolean
                      updatedAt:
                        type: string
                      createdAt:
                        type: string
                  filter:
                    type: array
                    items:
                      type: object
                      properties:
                        hashKey:
                          type: string
                        column:
                          type: object
                          properties:
                            base_table:
                              type: string
                            entity_id:
                              type: integer
                            name:
                              type: string
                            updatedAt:
                              type: string
                            createdAt:
                              type: string
                          operation:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                              value_type:
                                type: integer
                              updatedAt:
                                type: string
                              createdAt:
                                type: string
                          value:
                            type: string
                  dateFilters:
                    type: array
                    items:
                      type: object
                      properties:
                        hashKey:
                          type: string
                        column:
                          type: object
                          properties:
                            base_table:
                              type: string
                            entity_id:
                              type: integer
                            name:
                              type: string
                            updatedAt:
                              type: string
                            createdAt:
                              type: string
                          operation:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                              value_type:
                                type: integer
                              updatedAt:
                                type: string
                              createdAt:
                                type: string
                          value:
                            type: string
                    baseColumn:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        base_type:
                          type: string
                        base_table:
                          type: string
                        second_table:
                          type: string
                        entity_id:
                          type: integer
                        createdAt:
                          type: string
                        updatedAt:
                          type: string
                    category:
                      type: object
                      properties:
                        operation:
                          type: string
                        column:
                          type: string
                  third_submain:
                    type: object
                    required: false
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                      definition:
                        type: object
                        properties:
                          name:
                            type: string
                          widgetType:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                          entity:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                              visible:
                                type: boolean
                              updatedAt:
                                type: string
                              createdAt:
                                type: string
                          filter:
                            type: array
                            items:
                              type: object
                              properties:
                                hashKey:
                                  type: string
                                column:
                                  type: object
                                  properties:
                                    base_table:
                                      type: string
                                    entity_id:
                                      type: integer
                                    name:
                                      type: string
                                    updatedAt:
                                      type: string
                                    createdAt:
                                      type: string
                                  operation:
                                    type: object
                                    properties:
                                      id:
                                        type: integer
                                      name:
                                        type: string
                                      value_type:
                                        type: integer
                                      updatedAt:
                                        type: string
                                      createdAt:
                                        type: string
                                  value:
                                    type: string
                          dateFilters:
                            type: array
                            items:
                              type: object
                              properties:
                                hashKey:
                                  type: string
                                column:
                                  type: object
                                  properties:
                                    base_table:
                                      type: string
                                    entity_id:
                                      type: integer
                                    name:
                                      type: string
                                    updatedAt:
                                      type: string
                                    createdAt:
                                      type: string
                                  operation:
                                    type: object
                                    properties:
                                      id:
                                        type: integer
                                      name:
                                        type: string
                                      value_type:
                                        type: integer
                                      updatedAt:
                                        type: string
                                      createdAt:
                                        type: string
                                  value:
                                    type: string
                            baseColumn:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                                base_type:
                                  type: string
                                base_table:
                                  type: string
                                second_table:
                                  type: string
                                entity_id:
                                  type: integer
                                createdAt:
                                  type: string
                                updatedAt:
                                  type: string
                            category:
                              type: object
                              properties:
                                operation:
                                  type: string
                                column:
                                  type: string
  PostCommentBody:
    type: object
    properties:
      postId:
        type: string
      content:
        type: string
  PostCommentDeleteBody:
    type: object
    properties:
      postId:
        type: string
      commentId:
        type: string
  PostEntity:
    type: object
    properties:
      id:
        type: string
      layout:
        type: string
      title:
        type: string
      description:
        type: string
      comments:
        type: array
        items:
          type: string
      likes:
        type: array
        items:
          type: string
      pictures:
        type: array
        items:
          type: string
      tags:
        type: array
        items:
          type: string
  LikePostBody:
    type: object
    properties:
      postId:
        type: string
  UserStats:
    type: object
    properties:
      followers:
        type: integer
      following:
        type: integer
      posts:
        type: integer
  PostTagBody:
    type: object
    properties:
      postId:
        type: string
      tag:
        type: string
  passwordUpdate:
    type: object
    properties:
      currentPassword:
        type: string
      password:
        type: string
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
      index:
        type: integer
      errmsg:
        type: "string"
      op:
        type: "array"
        items:
          type: "string"
